// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: blankRequireMsg.proto

package blankRequireMsgpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BlankRequireMsgHandleClient is the client API for BlankRequireMsgHandle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BlankRequireMsgHandleClient interface {
	// Handles a received BlankRequireMsg message
	BlankRequireMsgReceive(ctx context.Context, in *BlankRequireMsg, opts ...grpc.CallOption) (*BlankRequireMsgResponse, error)
}

type blankRequireMsgHandleClient struct {
	cc grpc.ClientConnInterface
}

func NewBlankRequireMsgHandleClient(cc grpc.ClientConnInterface) BlankRequireMsgHandleClient {
	return &blankRequireMsgHandleClient{cc}
}

func (c *blankRequireMsgHandleClient) BlankRequireMsgReceive(ctx context.Context, in *BlankRequireMsg, opts ...grpc.CallOption) (*BlankRequireMsgResponse, error) {
	out := new(BlankRequireMsgResponse)
	err := c.cc.Invoke(ctx, "/blankRequireMsgpb.BlankRequireMsgHandle/BlankRequireMsgReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlankRequireMsgHandleServer is the server API for BlankRequireMsgHandle service.
// All implementations must embed UnimplementedBlankRequireMsgHandleServer
// for forward compatibility
type BlankRequireMsgHandleServer interface {
	// Handles a received BlankRequireMsg message
	BlankRequireMsgReceive(context.Context, *BlankRequireMsg) (*BlankRequireMsgResponse, error)
	mustEmbedUnimplementedBlankRequireMsgHandleServer()
}

// UnimplementedBlankRequireMsgHandleServer must be embedded to have forward compatible implementations.
type UnimplementedBlankRequireMsgHandleServer struct {
}

func (UnimplementedBlankRequireMsgHandleServer) BlankRequireMsgReceive(context.Context, *BlankRequireMsg) (*BlankRequireMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlankRequireMsgReceive not implemented")
}
func (UnimplementedBlankRequireMsgHandleServer) mustEmbedUnimplementedBlankRequireMsgHandleServer() {}

// UnsafeBlankRequireMsgHandleServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BlankRequireMsgHandleServer will
// result in compilation errors.
type UnsafeBlankRequireMsgHandleServer interface {
	mustEmbedUnimplementedBlankRequireMsgHandleServer()
}

func RegisterBlankRequireMsgHandleServer(s grpc.ServiceRegistrar, srv BlankRequireMsgHandleServer) {
	s.RegisterService(&BlankRequireMsgHandle_ServiceDesc, srv)
}

func _BlankRequireMsgHandle_BlankRequireMsgReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlankRequireMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlankRequireMsgHandleServer).BlankRequireMsgReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blankRequireMsgpb.BlankRequireMsgHandle/BlankRequireMsgReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlankRequireMsgHandleServer).BlankRequireMsgReceive(ctx, req.(*BlankRequireMsg))
	}
	return interceptor(ctx, in, info, handler)
}

// BlankRequireMsgHandle_ServiceDesc is the grpc.ServiceDesc for BlankRequireMsgHandle service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BlankRequireMsgHandle_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "blankRequireMsgpb.BlankRequireMsgHandle",
	HandlerType: (*BlankRequireMsgHandleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BlankRequireMsgReceive",
			Handler:    _BlankRequireMsgHandle_BlankRequireMsgReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blankRequireMsg.proto",
}
