// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: tcSetupMsg.proto

package tcSetupMsgpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TcSetupMsgHandleClient is the client API for TcSetupMsgHandle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TcSetupMsgHandleClient interface {
	// Handles a received TcSetupMsg message
	TcSetupMsgReceive(ctx context.Context, in *TcSetupMsg, opts ...grpc.CallOption) (*TcSetupMsgResponse, error)
}

type tcSetupMsgHandleClient struct {
	cc grpc.ClientConnInterface
}

func NewTcSetupMsgHandleClient(cc grpc.ClientConnInterface) TcSetupMsgHandleClient {
	return &tcSetupMsgHandleClient{cc}
}

func (c *tcSetupMsgHandleClient) TcSetupMsgReceive(ctx context.Context, in *TcSetupMsg, opts ...grpc.CallOption) (*TcSetupMsgResponse, error) {
	out := new(TcSetupMsgResponse)
	err := c.cc.Invoke(ctx, "/tcSetupMsgpb.TcSetupMsgHandle/TcSetupMsgReceive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TcSetupMsgHandleServer is the server API for TcSetupMsgHandle service.
// All implementations must embed UnimplementedTcSetupMsgHandleServer
// for forward compatibility
type TcSetupMsgHandleServer interface {
	// Handles a received TcSetupMsg message
	TcSetupMsgReceive(context.Context, *TcSetupMsg) (*TcSetupMsgResponse, error)
	mustEmbedUnimplementedTcSetupMsgHandleServer()
}

// UnimplementedTcSetupMsgHandleServer must be embedded to have forward compatible implementations.
type UnimplementedTcSetupMsgHandleServer struct {
}

func (UnimplementedTcSetupMsgHandleServer) TcSetupMsgReceive(context.Context, *TcSetupMsg) (*TcSetupMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TcSetupMsgReceive not implemented")
}
func (UnimplementedTcSetupMsgHandleServer) mustEmbedUnimplementedTcSetupMsgHandleServer() {}

// UnsafeTcSetupMsgHandleServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TcSetupMsgHandleServer will
// result in compilation errors.
type UnsafeTcSetupMsgHandleServer interface {
	mustEmbedUnimplementedTcSetupMsgHandleServer()
}

func RegisterTcSetupMsgHandleServer(s grpc.ServiceRegistrar, srv TcSetupMsgHandleServer) {
	s.RegisterService(&TcSetupMsgHandle_ServiceDesc, srv)
}

func _TcSetupMsgHandle_TcSetupMsgReceive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TcSetupMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcSetupMsgHandleServer).TcSetupMsgReceive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tcSetupMsgpb.TcSetupMsgHandle/TcSetupMsgReceive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcSetupMsgHandleServer).TcSetupMsgReceive(ctx, req.(*TcSetupMsg))
	}
	return interceptor(ctx, in, info, handler)
}

// TcSetupMsgHandle_ServiceDesc is the grpc.ServiceDesc for TcSetupMsgHandle service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TcSetupMsgHandle_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "tcSetupMsgpb.TcSetupMsgHandle",
	HandlerType: (*TcSetupMsgHandleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TcSetupMsgReceive",
			Handler:    _TcSetupMsgHandle_TcSetupMsgReceive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tcSetupMsg.proto",
}
